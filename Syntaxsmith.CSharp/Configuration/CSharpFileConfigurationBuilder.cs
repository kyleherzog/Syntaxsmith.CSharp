namespace Syntaxsmith.CSharp.Configuration;

public class CSharpFileConfigurationBuilder
{
    internal CSharpFileConfigurationBuilder()
    {
        GlobalConfiguration.CSharpFile?.Invoke(this);
    }

    internal CSharpFileConfiguration Configuration { get; } = new();

    internal CSharpFileConfiguration Build()
    {
        return Configuration;
    }

    public CSharpFileConfigurationBuilder ClearDirectives()
    {
        Configuration.Directives.Clear();
        return this;
    }

    public CSharpFileConfigurationBuilder WithAutoGeneratedComment(bool value = true)
    {
        Configuration.IsAddingAutoGeneratedComment = value;
        return this;
    }

    public CSharpFileConfigurationBuilder WithDirective(PreprocessorDirective directive, string? value = null)
    {
        Configuration.Directives.Add((directive, value));
        return this;
    }

    public CSharpFileConfigurationBuilder WithDirectives(params (PreprocessorDirective, string?)[] directives)
    {
        Configuration.Directives.AddRange(directives);
        return this;
    }
}